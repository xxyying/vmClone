/* 
 * Vmoso API
 *
 * Vmoso API
 *
 * OpenAPI spec version: 2.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace VmosoApiClient.Model
{
    /// <summary>
    /// AddAudioInput
    /// </summary>
    [DataContract]
    public partial class AddAudioInput :  IEquatable<AddAudioInput>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddAudioInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddAudioInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddAudioInput" /> class.
        /// </summary>
        /// <param name="CommentListKey"> (required).</param>
        /// <param name="Duration"> (required).</param>
        /// <param name="Agentid"> (required).</param>
        /// <param name="ContentKey"> (required).</param>
        /// <param name="Corpid"> (required).</param>
        /// <param name="Mediaid"> (required).</param>
        public AddAudioInput(string CommentListKey = null, int? Duration = null, string Agentid = null, string ContentKey = null, string Corpid = null, string Mediaid = null)
        {
            // to ensure "CommentListKey" is required (not null)
            if (CommentListKey == null)
            {
                throw new InvalidDataException("CommentListKey is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.CommentListKey = CommentListKey;
            }
            // to ensure "Duration" is required (not null)
            if (Duration == null)
            {
                throw new InvalidDataException("Duration is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.Duration = Duration;
            }
            // to ensure "Agentid" is required (not null)
            if (Agentid == null)
            {
                throw new InvalidDataException("Agentid is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.Agentid = Agentid;
            }
            // to ensure "ContentKey" is required (not null)
            if (ContentKey == null)
            {
                throw new InvalidDataException("ContentKey is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.ContentKey = ContentKey;
            }
            // to ensure "Corpid" is required (not null)
            if (Corpid == null)
            {
                throw new InvalidDataException("Corpid is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.Corpid = Corpid;
            }
            // to ensure "Mediaid" is required (not null)
            if (Mediaid == null)
            {
                throw new InvalidDataException("Mediaid is a required property for AddAudioInput and cannot be null");
            }
            else
            {
                this.Mediaid = Mediaid;
            }
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="commentListKey", EmitDefaultValue=false)]
        public string CommentListKey { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="duration", EmitDefaultValue=false)]
        public int? Duration { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="agentid", EmitDefaultValue=false)]
        public string Agentid { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="contentKey", EmitDefaultValue=false)]
        public string ContentKey { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="corpid", EmitDefaultValue=false)]
        public string Corpid { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="mediaid", EmitDefaultValue=false)]
        public string Mediaid { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddAudioInput {\n");
            sb.Append("  CommentListKey: ").Append(CommentListKey).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  Agentid: ").Append(Agentid).Append("\n");
            sb.Append("  ContentKey: ").Append(ContentKey).Append("\n");
            sb.Append("  Corpid: ").Append(Corpid).Append("\n");
            sb.Append("  Mediaid: ").Append(Mediaid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as AddAudioInput);
        }

        /// <summary>
        /// Returns true if AddAudioInput instances are equal
        /// </summary>
        /// <param name="other">Instance of AddAudioInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddAudioInput other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CommentListKey == other.CommentListKey ||
                    this.CommentListKey != null &&
                    this.CommentListKey.Equals(other.CommentListKey)
                ) && 
                (
                    this.Duration == other.Duration ||
                    this.Duration != null &&
                    this.Duration.Equals(other.Duration)
                ) && 
                (
                    this.Agentid == other.Agentid ||
                    this.Agentid != null &&
                    this.Agentid.Equals(other.Agentid)
                ) && 
                (
                    this.ContentKey == other.ContentKey ||
                    this.ContentKey != null &&
                    this.ContentKey.Equals(other.ContentKey)
                ) && 
                (
                    this.Corpid == other.Corpid ||
                    this.Corpid != null &&
                    this.Corpid.Equals(other.Corpid)
                ) && 
                (
                    this.Mediaid == other.Mediaid ||
                    this.Mediaid != null &&
                    this.Mediaid.Equals(other.Mediaid)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CommentListKey != null)
                    hash = hash * 59 + this.CommentListKey.GetHashCode();
                if (this.Duration != null)
                    hash = hash * 59 + this.Duration.GetHashCode();
                if (this.Agentid != null)
                    hash = hash * 59 + this.Agentid.GetHashCode();
                if (this.ContentKey != null)
                    hash = hash * 59 + this.ContentKey.GetHashCode();
                if (this.Corpid != null)
                    hash = hash * 59 + this.Corpid.GetHashCode();
                if (this.Mediaid != null)
                    hash = hash * 59 + this.Mediaid.GetHashCode();
                return hash;
            }
        }
    }

}
