/* 
 * Vmoso API
 *
 * Vmoso API
 *
 * OpenAPI spec version: 2.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace VmosoApiClient.Model
{
    /// <summary>
    /// ResetPasswordactionPhoneInput
    /// </summary>
    [DataContract]
    public partial class ResetPasswordactionPhoneInput :  IEquatable<ResetPasswordactionPhoneInput>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResetPasswordactionPhoneInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ResetPasswordactionPhoneInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResetPasswordactionPhoneInput" /> class.
        /// </summary>
        /// <param name="ResetPassword"> (required).</param>
        /// <param name="PinCode"> (required).</param>
        /// <param name="UserName"> (required).</param>
        /// <param name="ConfirmResetPassword"> (required).</param>
        public ResetPasswordactionPhoneInput(string ResetPassword = null, string PinCode = null, string UserName = null, string ConfirmResetPassword = null)
        {
            // to ensure "ResetPassword" is required (not null)
            if (ResetPassword == null)
            {
                throw new InvalidDataException("ResetPassword is a required property for ResetPasswordactionPhoneInput and cannot be null");
            }
            else
            {
                this.ResetPassword = ResetPassword;
            }
            // to ensure "PinCode" is required (not null)
            if (PinCode == null)
            {
                throw new InvalidDataException("PinCode is a required property for ResetPasswordactionPhoneInput and cannot be null");
            }
            else
            {
                this.PinCode = PinCode;
            }
            // to ensure "UserName" is required (not null)
            if (UserName == null)
            {
                throw new InvalidDataException("UserName is a required property for ResetPasswordactionPhoneInput and cannot be null");
            }
            else
            {
                this.UserName = UserName;
            }
            // to ensure "ConfirmResetPassword" is required (not null)
            if (ConfirmResetPassword == null)
            {
                throw new InvalidDataException("ConfirmResetPassword is a required property for ResetPasswordactionPhoneInput and cannot be null");
            }
            else
            {
                this.ConfirmResetPassword = ConfirmResetPassword;
            }
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="resetPassword", EmitDefaultValue=false)]
        public string ResetPassword { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="pinCode", EmitDefaultValue=false)]
        public string PinCode { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="userName", EmitDefaultValue=false)]
        public string UserName { get; set; }
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="confirmResetPassword", EmitDefaultValue=false)]
        public string ConfirmResetPassword { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResetPasswordactionPhoneInput {\n");
            sb.Append("  ResetPassword: ").Append(ResetPassword).Append("\n");
            sb.Append("  PinCode: ").Append(PinCode).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  ConfirmResetPassword: ").Append(ConfirmResetPassword).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ResetPasswordactionPhoneInput);
        }

        /// <summary>
        /// Returns true if ResetPasswordactionPhoneInput instances are equal
        /// </summary>
        /// <param name="other">Instance of ResetPasswordactionPhoneInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResetPasswordactionPhoneInput other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ResetPassword == other.ResetPassword ||
                    this.ResetPassword != null &&
                    this.ResetPassword.Equals(other.ResetPassword)
                ) && 
                (
                    this.PinCode == other.PinCode ||
                    this.PinCode != null &&
                    this.PinCode.Equals(other.PinCode)
                ) && 
                (
                    this.UserName == other.UserName ||
                    this.UserName != null &&
                    this.UserName.Equals(other.UserName)
                ) && 
                (
                    this.ConfirmResetPassword == other.ConfirmResetPassword ||
                    this.ConfirmResetPassword != null &&
                    this.ConfirmResetPassword.Equals(other.ConfirmResetPassword)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ResetPassword != null)
                    hash = hash * 59 + this.ResetPassword.GetHashCode();
                if (this.PinCode != null)
                    hash = hash * 59 + this.PinCode.GetHashCode();
                if (this.UserName != null)
                    hash = hash * 59 + this.UserName.GetHashCode();
                if (this.ConfirmResetPassword != null)
                    hash = hash * 59 + this.ConfirmResetPassword.GetHashCode();
                return hash;
            }
        }
    }

}
